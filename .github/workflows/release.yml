name: Release Build
on:
  workflow_dispatch:
    inputs:

env:
  DOCKER_BUILDKIT: 1

jobs:
  build_ffmpeg:
    name: Build ffmpeg
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [win64,linux64,linuxarm64]
        variant: [lgpl]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build ffmpeg
        env:
          FF_SPECIFIC_CONFIGURE: ${{ secrets.FF_SPECIFIC_CONFIGURE }}
        run: |
          chmod 777 build.sh
          ./build.sh ${{ matrix.target }} ${{ matrix.variant }}
          cd artifacts
          ls -l
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ffmpeg
          path: artifacts/*

  publish_release:
    name: Publish release
    if: ${{ !cancelled() && needs.build_ffmpeg.result == 'success' }}
    needs: build_ffmpeg
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ffmpeg
          path: artifacts
      - name: Create release
        id: create_release
        run: |
          set -xe
          shopt -s nullglob
          RELDATE="$(date +'%Y-%m-%d %H:%M')"
          NAME="Auto-Build $RELDATE"
          TAGNAME="autobuild-$(date +'%Y-%m-%d-%H-%M')"
          hub release create $(for a in artifacts/*.{zip,tar.xz}; do echo -a $a; done) -m "$NAME" -t "master" "$TAGNAME"
          echo "tag_name=${TAGNAME}" >> $GITHUB_OUTPUT
          echo "rel_date=${RELDATE}" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ github.token }}
