name: Build win-arm64 and win-x64

on:
  workflow_dispatch:

jobs:
  build-arm64:
    runs-on: ubuntu-latest
    container:
      image: mstorsjo/llvm-mingw:20230614
    steps:
      - uses: actions/checkout@v3 
        with:
          repository: FFmpeg/FFmpeg
          path: ffmpeg
      - name: build ffmpeg arm64
        run: |
          mkdir -p ${{ github.workspace }}/local
          cd ffmpeg
          export PKG_CONFIG_LIBDIR=${{ github.workspace }}/local/lib/pkgconfig
          ./configure --prefix=${{ github.workspace }}/local --pkg-config=/usr/bin/x86_64-pc-linux-gnu-pkg-config --pkgconfigdir=${{ github.workspace }}/local/lib/pkgconfig --cross-prefix=aarch64-w64-mingw32- --arch=arm64 --target-os=mingw32 ${{ secrets.FF_SPECIFIC_CONFIGURE }}

          make -j16
          make install
          
      - name: Archive arm64
        run: |
          mkdir -p output
          cp ${{ github.workspace }}/local/bin/* output
          cd output
          zip -r -D ../ffmpeg-win-arm64.zip .
          
      - name: Upload artifacts arm64
        uses: actions/upload-artifact@v3
        with:
          name: ffmpeg-arm64
          path: ffmpeg-win-arm64.zip
          
      - name: Get Info arm64
        run: |
          RELDATE="$(date +'%Y-%m-%d %H:%M')"
          NAME="Auto-Build ARM64 $RELDATE"
          TAGNAME="autobuild-arm64-$(date +'%Y-%m-%d-%H-%M')"
          echo "tag_name=${TAGNAME}" >> $GITHUB_ENV
          echo "rel_date=${RELDATE}" >> $GITHUB_ENV
          echo "release_name=${NAME}" >> $GITHUB_ENV
          echo "ff_config=${FF_SPECIFIC_CONFIGURE}" >> $GITHUB_ENV
        env:
          FF_SPECIFIC_CONFIGURE: ${{ secrets.FF_SPECIFIC_CONFIGURE }}
          
      - name: Create release arm64
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.tag_name }}
          name: ${{ env.release_name }}
          body: |
            相关配置为: ${{ env.ff_config }}
          draft: false
          prerelease: false
          files: |
            ffmpeg-win-arm64.zip

  build-x64:
    runs-on: ubuntu-latest
    container:
      image: mstorsjo/llvm-mingw:20230614
    steps:
      - uses: actions/checkout@v3 
        with:
          repository: FFmpeg/FFmpeg
          path: ffmpeg
      - name: build ffmpeg x64
        run: |
          mkdir -p ${{ github.workspace }}/local
          cd ffmpeg
          export PKG_CONFIG_LIBDIR=${{ github.workspace }}/local/lib/pkgconfig
          ./configure --prefix=${{ github.workspace }}/local --pkg-config=/usr/bin/x86_64-pc-linux-gnu-pkg-config --pkgconfigdir=${{ github.workspace }}/local/lib/pkgconfig --cross-prefix=x86_64-w64-mingw32- --arch=x86_64 --target-os=mingw32 ${{ secrets.FF_SPECIFIC_CONFIGURE }}

          make -j16
          make install
          
      - name: Archive x64
        run: |
          mkdir -p output
          cp ${{ github.workspace }}/local/bin/* output
          cd output
          zip -r -D ../ffmpeg-win-x64.zip .
          
      - name: Upload artifacts x64
        uses: actions/upload-artifact@v3
        with:
          name: ffmpeg-x64
          path: ffmpeg-win-x64.zip
          
      - name: Get Info x64
        run: |
          RELDATE="$(date +'%Y-%m-%d %H:%M')"
          NAME="Auto-Build x64 $RELDATE"
          TAGNAME="autobuild-x64-$(date +'%Y-%m-%d-%H-%M')"
          echo "tag_name=${TAGNAME}" >> $GITHUB_ENV
          echo "rel_date=${RELDATE}" >> $GITHUB_ENV
          echo "release_name=${NAME}" >> $GITHUB_ENV
          echo "ff_config=${FF_SPECIFIC_CONFIGURE}" >> $GITHUB_ENV
        env:
          FF_SPECIFIC_CONFIGURE: ${{ secrets.FF_SPECIFIC_CONFIGURE }}
          
      - name: Create release x64
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.tag_name }}
          name: ${{ env.release_name }}
          body: |
            相关配置为: ${{ env.ff_config }}
          draft: false
          prerelease: false
          files: |
            ffmpeg-win-x64.zip
